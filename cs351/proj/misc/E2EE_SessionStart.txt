title Message Protocol

// Alice is a new user.
participantgroup #pink Alice
database IDB A
actor Browser A
end

// This is the server itself.
participantgroup #lightgray Message Server
participant Web API
database Message DB
end

// Bob is an existing user.
participantgroup #lightblue Bob
actor Browser B
database IDB B
end

// Alice would like to message Bob for
// the first time.
// Requires a Key Exchange.
group New Chat [User-to-User Key Exchange]

IDB A <-->Browser A: Retrieve key pairs
Browser A ->Web API: Request Bob's PKs:\nI--B--, S--B--, and one O--Bk--

Web API <-->Message DB: Retrieve PKs
note over Message DB: Remove O--Bk--

Web API-->Browser A: Return PKs

note over Browser A: 1. Genrate an ephemeral key pair E--A--\n2. Generate shared_secret as:\n  ECDH(I--A--, S--B--) || ECDH(E--A--, I--B--) || \n  ECDH(E--A--, S--B--) || ECDH(E--A--, O--Bk--)\n3. Create Root and Chain keys as:\n  (RK--AB1--,CK--AB1,1--) = HKDF(shared_secret)\n4. Prepend metadata to any messages:\n  PKs of (I--A--, E--A--) and O--B-- index k

Browser A ->IDB A: Store keys

loop Initial Messages
linear on
Browser A ->Web API: Send message w/ metadata\n(see below)
Web API->Message DB: Store until Bob online
linear off
end 

Browser B<-->IDB B: Retrieve key pairs
Browser B->Web API: Get any messages
Web API-->Browser B: Return messages

Browser B-->IDB B: Remove stored O--Bk--

note over Browser B:1. Generate shared_secret as:\n  ECDH(S--B--, I--A--) || ECDH(I--B--, E--A--) || \n  ECDH(S--B--, E--A--) || ECDH(O--Bk--, E--A--)\n2.Create Root and Chain keys as:\n  (RK--AB1--,CK--AB1,1--) = HKDF(shared_secret)\n3. Decrypt message (see below).

Browser B->IDB B: Store keys

end
