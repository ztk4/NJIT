#!/bin/ksh

### CS280 Spring 2016
### Programming Assignment 1
### shell script for testing 

### Prof Ryan


DIFF=diff

usage() {
	echo $*
	echo "Usage:"
	echo "./test-program1 {c++ source files}"
	echo "./test-program1 -showtests prints out the tests"
	echo "./test-program1 -diff runs diffs for the tests"
	echo "./test-program1 -cleanup deletes files created by the testing"
	exit
}

go() {
	#echo $*
	eval $*
}

runtests() {
	live=1
	if [[ "$1" = "-show" ]] ; then
		set echo YOURPROGRAM
		live=0
	else
		set go $*
	fi
	echo "Arg check test: These cases should generate an error messages and stop"
	[[ $live = 1 ]] && set -x
	$* "<p1-badtest1.in > p1-badtest1.out"
	[[ $live = 1 ]] && $DIFF p1-badtest1.out p1-badtest1.correct
	$* "<p1-badtest2.in > p1-badtest2.out"
	[[ $live = 1 ]] && $DIFF p1-badtest2.out p1-badtest2.correct
	[[ $live = 1 ]] && set +x

	echo "Test cases: if your output does not match, the difference between yours and correct output are printed"
	echo "The list of cases follows. If there is no output other than the case numbers and 'test done', everything passed"

	for i in 1 2 3 4 5 ; do
		echo $i:
		$* "< p1-test$i.in > p1-test$i.out 2>&1"
		[[ $live = 1 ]] && $DIFF p1-test$i.out p1-test$i.correct
	done

	[[ $live = 1 ]] && echo "test done"
}


cfiles=

if [[ $# -eq 1 && "$1" = "-cleanup" ]] ; then
	rm -f *.out
	exit 0
fi

if [[ $# -eq 1 && "$1" = "-showtests" ]] ; then
	runtests -show
	exit 0
fi

if [[ "$1" = "-diff" ]] ; then
	DIFF="sdiff --text"
	for i in 1 2 3 4 5 6 7 8 9 10; do
		echo $i:
		$DIFF p1-test${i}.out p1-test${i}.correct
	done
	exit 0
fi

while [[ $# -gt 0 ]]
do
	val=$1
	shift

	cfiles="$cfiles $val"
done

if [[ "$cfiles" = "" ]] ; then
	usage "no c++ files"
fi

echo "Compiling these c++ files: " $cfiles
g++ -g --std=c++0x $cfiles
if [[ $? -ne 0 ]] ; then
	echo "c++ compile failed"
	exit
fi

echo "********** Testing program 1 **********"
runtests ./a.out

